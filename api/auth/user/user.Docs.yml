paths:
  "/users/me":
    get:
      tags:
        - auth.users
      summary: Crear un nuevo usuario | Solo admin
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Subfamily created
  "/users":
    post:
      tags:
        - auth.users
      summary: Crear un nuevo usuario | Solo admin
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/createUserPayload"
      responses:
        "201":
          description: Subfamily created
    get:
      tags:
        - auth.users
      summary: Listar todas los usuarios
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/pagePagination"
        - $ref: "#/components/parameters/pageSizePagination"
        
        - $ref: "#/components/parameters/name"
        - $ref: "#/components/parameters/lastname"
        - $ref: "#/components/parameters/idNumber"
        - $ref: "#/components/parameters/active"
        - $ref: "#/components/parameters/role"
      responses:
        "200":
          description: Subfamilies found
  "/users/{id}":
    get:
      tags:
        - auth.users
      summary: Encontrar usuario por Id
      parameters:
        - $ref: "#/components/parameters/paramId"
      responses:
        "200":
          description: Successful operation
    put:
      tags:
        - auth.users
      summary: Actualizar un usuario existente
      parameters:
        - $ref: "#/components/parameters/paramId"
      requestBody:
        $ref: "#/components/requestBodies/updateUserPayload"
      responses:
        "201":
          description: User updated
  "/users/forgotpassword":
    post:
      tags:
        - auth.users
      summary: Request email and token to restore password
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        200:
          description: Successful
  "/users/resetpassword":
    post:
      tags:
        - auth.users
      summary: Reset password by provided code
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                token:
                  type: string
                password:
                  type: string
              required:
                - email
                - code
                - password
      responses:
        200:
          description: Successful
  "/users/updatepassword":
    post:
      tags:
        - auth.users
      summary: Reset password by current password
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                password:
                  type: string
              required:
                - oldPassword
                - password
      responses:
        200:
          description: Successful
components:
  requestBodies:
    createUserPayload:
      content:
        application/json:
          schema:
            type: object
            properties:
              idNumber:
                type: string
              email:
                type: string
              name:
                type: string
              lastname:
                type: string
              phoneNumber:
                type: string
              password:
                type: string
              role:
                type: string
            required:
              - password
              - idNumber
              - email
              - name
              - lastname
          examples:
            Nuevo usuario:
              value:
                idNumber: "11111111"
                email: "nuevo@correo.com"
                password: "password"
                name: "Prueba"
                lastname: "Test"
                phoneNumber: "987654321"
                role: "superuser"
    updateUserPayload:
      content:
        application/json:
          schema:
            type: object
            properties:
              idNumber:
                type: string
              email:
                type: string
              name:
                type: string
              lastname:
                type: string
              phoneNumber:
                type: string
              role:
                type: string
          examples:
            Actualizar todo:
              value:
                idNumber: "22222222"
                email: "nuevo22@correo.com"
                name: "Prueba"
                lastname: "Test"
                phoneNumber: "987654321"
                role: "superuser"
                active: false
  parameters:
    name:
      name: name
      in: query
      description: Nombre del usuario
      required: false
      schema:
        type: string
    lastname:
      name: lastname
      in: query
      description: Apellido del usuario
      required: false
      schema:
        type: string
    idNumber:
      name: idNumber
      in: query
      description: Documento de identidad
      required: false
      schema:
        type: string
    role:
      name: role
      in: query
      description: Rol del usuario
      required: false
      schema:
        type: string
        enum: 
          - superuser
          - seller
          - logistic
          - manager
    active:
      name: active
      in: query
      description: Estado del usuario, si esta activo o deshabilitado
      required: false
      schema:
        type: boolean
      
